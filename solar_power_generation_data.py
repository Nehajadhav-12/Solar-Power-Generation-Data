# -*- coding: utf-8 -*-
"""Solar Power Generation Data

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1REIR7-h8h6xh99FwiZcJyaxJEKym5iGE

importing the necessary Python libraries
"""

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

# Input data files are available in the read-only "../input/" directory
# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory

import os
for dirname, _, filenames in os.walk('/content/Plant_1_Generation_Data.csv.zip'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

"""Uploading dataset"""

from google.colab import files
upload = files.upload()

"""Load the data from the CSV files"""

df1=pd.read_csv('/content/Plant_1_Generation_Data.csv.zip')
df2=pd.read_csv('/content/Plant_1_Weather_Sensor_Data.csv')
df3=pd.read_csv('/content/Plant_2_Generation_Data.csv.zip')
df4=pd.read_csv('/content/Plant_2_Weather_Sensor_Data.csv')

df1.head()

df2.head()

df3.head()

df4.head()

"""Explore each dataset - columns, counts, basic stats"""

df1.columns

df2.columns

df3.columns

df4.columns

df1.nunique()

df1['SOURCE_KEY'].unique()

df2.nunique()

df2['SOURCE_KEY'].unique()

df3.nunique()

df3['SOURCE_KEY'].unique()

df4.nunique()

df4['SOURCE_KEY'].unique()

df1.describe()

df2.describe()

df3.describe()

df4.describe()

"""The mean value of daily yield"""

df1['DAILY_YIELD'].mean()

df3['DAILY_YIELD'].mean()

"""The total irradiation per day"""

df2['IRRADIATION'].sum()

df4['IRRADIATION'].sum()

df2.head(5)

df2.info()

df2['DATE_TIME']=pd.to_datetime(df2['DATE_TIME'],format='%Y-%m-%d %H:%M:%S')
df2.info()

df2['DATE']=pd.to_datetime(df2['DATE_TIME'].dt.date)
df2

# select only the numeric columns
numeric_cols = df2.select_dtypes(include=np.number)
#Add the 'DATE' column to the numeric dataframe, so we can group by it.
numeric_cols['DATE'] = df2['DATE']

# Group by 'DATE' and then sum the numeric columns
d = numeric_cols.groupby(['DATE']).sum()
print(d['IRRADIATION'])

df4.head()

df4['DATE_TIME']=pd.to_datetime(df4['DATE_TIME'],format='%Y-%m-%d %H:%M:%S')
df4.info()

df4['DATE']=pd.to_datetime(df4['DATE_TIME'].dt.date)
df4

# Select only the numeric columns
numeric_cols = df4.select_dtypes(include=np.number)

# Add the 'DATE' column to the numeric dataframe, so we can group by it.
numeric_cols['DATE'] = df4['DATE']

# Group by 'DATE' and then sum the numeric columns
d = numeric_cols.groupby(['DATE']).sum()

# Print the sum of 'IRRADIATION'
print(d['IRRADIATION'])

"""The max ambient and module temperature"""

df2['AMBIENT_TEMPERATURE'].max()

df4['AMBIENT_TEMPERATURE'].max()

df2['MODULE_TEMPERATURE'].max()

df4['MODULE_TEMPERATURE'].max()

"""The many inverters are there for each plant"""

df1['SOURCE_KEY'].nunique()

df3['SOURCE_KEY'].nunique()

""" The maximum/minimum amount of DC/AC Power generated in a time interval/day"""

df1

df1.info()

df1['DATE_TIME']=pd.to_datetime(df1['DATE_TIME'],format='%d-%m-%Y %H:%M')
df1.info()

df1['DATE']=pd.to_datetime(df1['DATE_TIME']).dt.date
df1

df1.groupby(['DATE']).max()

df1['DC_POWER'].max()

df1['DC_POWER'].min()

df1['AC_POWER'].max()

df1['AC_POWER'].min()

df3['DC_POWER'].max()

df3['DC_POWER'].min()

df3['AC_POWER'].max()

df3['AC_POWER'].min()

"""The inverter (source_key) has produced maximum DC/AC power"""

(df1.iloc[df1['AC_POWER'].idxmax()])['SOURCE_KEY']

(df1.iloc[df1['DC_POWER'].idxmax()])['SOURCE_KEY']

(df3.iloc[df3['AC_POWER'].idxmax()])['SOURCE_KEY']

(df3.iloc[df3['DC_POWER'].idxmax()])['SOURCE_KEY']

"""Rank the inverters based on the DC/AC power they produce"""

df1.sort_values(by=['AC_POWER','DC_POWER'], ascending=False)

df3.sort_values(by=['AC_POWER','DC_POWER'], ascending=False)

"""Is there any missing data"""

df1.isnull()

df2.isnull()

df3.isnull()

df4.isnull()